version: '3.9'

services:
  ## --------------------------------------------------
  ## | Web Server and application pm2 (node)
  ## --------------------------------------------------
  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: .docker/backend/Dockerfile
    ports:
      - "${APP_PORT}:${NODE_PORT}"
    restart: always
    depends_on:
      - broker
      - datastore
    networks:
      - app-network
    env_file:
      - .env

  ## --------------------------------------------------
  ## | Database Server (Postgres)
  ## --------------------------------------------------
  datastore:
    image: postgres:alpine3.15
    container_name: datastore
    ports:
      - "5432:5432"
    restart: always
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  ## --------------------------------------------------
  ## | Broker - Rabbitmq
  ## --------------------------------------------------
  broker:
    image: bitnami/rabbitmq
    container_name: broker
    volumes:
      - './.docker/broker/data:/bitnami'
    restart: always
    networks:
      - app-network
    environment:
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_NODE_TYPE=queue-disc
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5

# Networks
networks:
  app-network:
    driver: bridge